version: '2.4'
services:
  xserver:
    build: ./xserver
    image: wn1980/xserver${TAG}
    container_name: ros_xserver
    init: true
    restart: unless-stopped
    #ipc: host
    security_opt:
    - seccomp:unconfined
    volumes:
    - "/etc/localtime:/etc/localtime:ro"
    ports:
    - "6901:6901"
    healthcheck:
      test: ["CMD-SHELL", "test -e /tmp/.X11-unix/X1"]
      interval: "1m"
      retries: 20
  rosbridge:
    build: ./rosbridge
    image: wn1980/rosbridge${TAG}
    container_name: ros_bridge
    init: true
    restart: unless-stopped
    volumes:
    - "/etc/localtime:/etc/localtime:ro"
    ports:
    - "8080:8080"
    - "9090:9090"
  simulator:
    build: ./turtlebot2
    image: wn1980/simulator${TAG}
    #image: devrt/simulator-turtlebot3
    container_name: ros_simulator
    init: true
    restart: "no"
    #ipc: host
    security_opt:
    - seccomp:unconfined
    environment:
    - DISPLAY=:1
    - ROS_MASTER_URI=http://rosbridge:11311
    - QT_X11_NO_MITSHM=1
    volumes_from:
    - xserver
    depends_on:
    - xserver
    - rosbridge
  workspace:
    # env_file:
    #   - .env
    build: ./workspace
    image: wn1980/workspace${TAG}
    container_name: ros_workspace
    #hostname: ros-ops
    init: true
    restart: unless-stopped
    #ipc: host
    security_opt:
    - seccomp:unconfined
    ports:
    #- "3000:3000"
    - "8888:8888"
    - "8338:8338"
    volumes:
    - workspace:/workspace
    - ~/.gitconfig:/home/developer/.gitconfig
    environment:
    - DISPLAY=:1
    - ROS_MASTER_URI=http://rosbridge:11311
    - QT_X11_NO_MITSHM=1
    volumes_from:
    - xserver
    depends_on:
    - xserver
    - rosbridge
  webui:
    build: ./webui
    image: wn1980/webui${TAG}
    container_name: ros_webui
    init: true
    restart: unless-stopped
    depends_on:
    - workspace
    ports:
    - "8118:80"
  webviz:
    build: ./webviz
    image: wn1980/webviz${TAG}
    container_name: ros_webviz
    init: true
    restart: unless-stopped
    depends_on:
    - rosbridge
    ports:
    - "8228:8080"
  webssh:
    build: ./webssh
    image: wn1980/webssh${TAG}
    container_name: ros_webssh
    init: true
    restart: unless-stopped
    ports:
      - "8998:8998"

volumes:
  workspace:
